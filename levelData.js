const wallsData = new Array();
const ballsData = new Array();
const goalsData = new Array();
const playerData = new Array();

wallsData.push([[2, 0], [3, 0], [4, 0], [4, 1], [4, 2], [5, 2], [6, 2], [7, 2], [7, 3], [7, 4], [6, 4], [5, 4], [5, 5], [5, 6], [5, 7], [4, 7], [3, 7], [3, 6], [3, 5], [2, 5], [1, 5], [0, 5], [0, 4], [0, 3], [1, 3], [2, 3], [2, 2], [2, 1]]);
ballsData.push([[3, 3], [3, 4], [4, 5], [5, 3]]);
goalsData.push([[3, 1], [1, 4], [6, 3], [4, 6]]);
playerData.push([4, 4]);

wallsData.push([[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [1, 4], [2, 4], [1, 5], [2, 5], [1, 6], [1, 7], [1, 8], [2, 8], [3, 8], [4, 8], [5, 8], [5, 7], [5, 6], [6, 7], [7, 7], [8, 7], [8, 6], [8, 5], [8, 4], [8, 3], [8, 2], [7, 2], [6, 2], [6, 3], [6, 4], [5, 4], [4, 4], [4, 3], [4, 2], [4, 1], [4, 0], [3, 0], [2, 0], [1, 0]]);
ballsData.push([[2, 2], [2, 3], [3, 3]]);
goalsData.push([[7, 3], [7, 4], [7, 5]]);
playerData.push([3, 2]);

wallsData.push([[1, 1], [1, 2], [1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [2, 3], [2, 4], [2, 7], [3, 7], [4, 7], [5, 7], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [5, 3], [5, 2], [5, 1], [5, 0], [4, 0], [3, 0], [2, 0], [2, 1]]);
ballsData.push([[4, 2], [3, 3], [4, 4], [3, 5], [4, 6]]);
goalsData.push([[2, 5], [2, 6], [3, 6], [4, 6], [5, 6]]);
playerData.push([3, 2]);

wallsData.push([[0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [1, 7], [2, 7], [3, 7], [4, 7], [5, 7], [6, 7], [7, 7], [7, 6], [7, 5], [7, 4], [7, 3], [6, 3], [6, 2], [6, 1], [5, 1], [4, 1], [4, 0], [3, 0], [2, 0], [1, 0], [1, 1], [1, 2], [1, 3], [2, 3], [2, 4], [4, 3], [4, 4], [5, 5]]);
ballsData.push([[2, 5], [3, 2], [5, 6]]);
goalsData.push([[1, 4], [1, 5], [1, 6]]);
playerData.push([2, 1]);

wallsData.push([[0, 2], [0, 3], [0, 4], [0, 5], [1, 5], [2, 5], [3, 5], [3, 6], [4, 6], [5, 6], [6, 6], [6, 5], [6, 4], [7, 4], [7, 3], [7, 2], [7, 1], [7, 0], [6, 0], [5, 0], [4, 0], [3, 0], [2, 0], [2, 1], [2, 2], [1, 2]]);
ballsData.push([[3, 2], [4, 2], [5, 2], [3, 3], [2, 4]]);
goalsData.push([[3, 4], [4, 4], [5, 4], [5, 3], [4, 3]]);
playerData.push([1, 3]);

wallsData.push([[0, 1], [0, 2], [0, 3], [0, 4], [1, 4], [2, 4], [2, 5], [2, 6], [3, 6], [4, 6], [5, 6], [6, 6], [6, 5], [7, 5], [7, 4], [7, 3], [7, 2], [6, 2], [6, 1], [6, 0], [5, 0], [4, 0], [3, 0], [2, 0], [2, 1], [1, 1]]);
ballsData.push([[3, 2], [4, 3], [5, 4], [4, 4]]);
goalsData.push([[4, 2], [5, 3], [3, 3], [4, 4]]);
playerData.push([5, 1]);

wallsData.push([[0, 4], [0, 5], [0, 6], [0, 7], [1, 7], [2, 7], [3, 7], [4, 7], [5, 7], [6, 7], [7, 7], [7, 6], [7, 5], [7, 4], [6, 4], [6, 3], [6, 2], [5, 2], [5, 1], [5, 0], [4, 0], [3, 0], [2, 0], [2, 1], [2, 2], [1, 2], [1, 3], [1, 4], [3, 5]]);
ballsData.push([[4, 3], [3, 4], [4, 5], [5, 5]]);
goalsData.push([[3, 1], [4, 1], [4, 2], [5, 3]]);
playerData.push([3, 6]);

wallsData.push([[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [1, 6], [2, 6], [3, 6], [4, 6], [5, 6], [6, 6], [7, 6], [7, 5], [7, 4], [7, 3], [7, 2], [7, 1], [7, 0], [6, 0], [5, 0], [4, 0], [3, 0], [2, 0], [1, 0], [3, 1], [3, 5], [6, 3]]);
ballsData.push([[2, 2], [2, 3], [2, 4], [5, 2], [4, 3], [5, 4]]);
goalsData.push([[3, 2], [4, 2], [3, 3], [3, 4], [4, 4], [4, 3]]);
playerData.push([1, 3]);

wallsData.push([[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [1, 4], [1, 5], [1, 6], [2, 6], [3, 6], [4, 6], [5, 6], [6, 6], [7, 6], [8, 6], [8, 5], [8, 4], [8, 3], [7, 3], [6, 3], [6, 2], [5, 2], [5, 1], [5, 0], [4, 0], [3, 0], [2, 0], [1, 0], [0, 0], [3, 3]]);
ballsData.push([[2, 2], [3, 2], [4, 2], [6, 4]]);
goalsData.push([[4, 3], [5, 3], [5, 4], [4, 4]]);
playerData.push([3, 5]);

wallsData.push([[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [1, 7], [2, 7], [3, 7], [4, 7], [5, 7], [6, 7], [6, 6], [6, 5], [6, 4], [6, 3], [6, 2], [6, 1], [6, 0], [5, 0], [4, 0], [3, 0], [2, 0], [1, 0], [3, 2], [3, 6]]);
ballsData.push([[3, 1], [2, 3], [3, 3], [4, 3], [3, 4], [2, 5], [3, 5], [4, 5]]);
goalsData.push([[1, 1], [1, 2], [2, 1], [2, 2], [4, 1], [5, 1], [4, 2], [5, 2]]);
playerData.push([4, 6]);

const initialLevel = new Array;
{
  for (let i = 0; i < playerData.length; i++) {
    const initBalls = new Array;
    for (let j = 0; j < ballsData[i].length; j++) {
      initBalls.push([ballsData[i][j][0], ballsData[i][j][1]]);
    }
    initialLevel.push([initBalls, [playerData[i][0], playerData[i][1]]]);
  }
}